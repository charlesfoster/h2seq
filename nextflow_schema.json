{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/charlesfoster/h2seq/master/nextflow_schema.json",
    "title": "charlesfoster/h2seq pipeline parameters",
    "description": "This pipeline analyses HCV and HIV sequencing data from the H2Seq study",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 4 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "single_end": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Specifies that the input is single-end reads.",
                    "fa_icon": "fas fa-align-center",
                    "help_text": "*** REMOVE?  I want the pipeline to accept both single and paired end.*** By default, the pipeline expects paired-end data. If you have single-end data, you need to specify `--single_end` on the command line when you launch the pipeline. A normal glob pattern, enclosed in quotation marks, can then be used for `--input`. For example:\n\n```bash\n--single_end --input '*.fastq'\n```\n\nIt is not possible to run a mixture of single-end and paired-end files in one run."
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open",
                    "default": "results"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature",
                    "hidden": true
                }
            }
        },
        "long_read_quality_control_options": {
            "title": "Long read quality control options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options for QC os sequencing reads in the workflow.",
            "properties": {
                "save_trimmed_long_reads": {
                    "type": "boolean",
                    "hidden": false,
                    "description": "Save quality-controlled sequencing reads.",
                    "help_text": "Save quality-controlled sequencing reads.",
                    "fa_icon": "fas fa-align-center"
                },
                "long_reads_min_len": {
                    "type": "integer",
                    "description": "Minimum read length to retain during QC filtering.",
                    "default": 500,
                    "fa_icon": "fas fa-file-code",
                    "hidden": false,
                    "help_text": "Minimum read length to retain during QC filtering."
                },
                "long_reads_max_len": {
                    "type": "integer",
                    "description": "Maximum read length to retain during QC filtering.",
                    "default": 2000,
                    "fa_icon": "fas fa-file-code",
                    "hidden": false,
                    "help_text": "Maximum read length to retain during QC filtering."
                }
            }
        },
        "short_read_quality_control_options": {
            "title": "Short read quality control options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "save_trimmed_short_reads": {
                    "type": "boolean",
                    "fa_icon": "fas fa-stream"
                },
                "short_reads_min_len": {
                    "type": "integer",
                    "default": 70,
                    "fa_icon": "fas fa-ruler"
                },
                "fastp_qualified_quality": {
                    "type": "integer",
                    "default": 15,
                    "hidden": true,
                    "fa_icon": "fas fa-notes-medical"
                },
                "fastp_unqualified_percent_limit": {
                    "type": "integer",
                    "default": 40,
                    "hidden": true,
                    "fa_icon": "fas fa-percent"
                },
                "fastp_cut_mean_quality": {
                    "type": "integer",
                    "default": 15,
                    "hidden": true,
                    "fa_icon": "fas fa-notes-medical"
                },
                "fastp_interleaved_in": {
                    "type": "boolean",
                    "hidden": true,
                    "fa_icon": "fas fa-question-circle"
                },
                "fastp_save_merged": {
                    "type": "boolean",
                    "hidden": true,
                    "fa_icon": "fas fa-question-circle"
                },
                "fastp_low_complexity_filter": {
                    "type": "boolean",
                    "default": true,
                    "hidden": true,
                    "fa_icon": "fas fa-filter"
                },
                "fastp_complexity_threshold": {
                    "type": "integer",
                    "default": 40,
                    "hidden": true,
                    "fa_icon": "fas fa-shield-virus"
                },
                "fastp_error_correction": {
                    "type": "boolean",
                    "default": true,
                    "hidden": true,
                    "fa_icon": "fas fa-question-circle"
                },
                "fastp_adapter_path": {
                    "type": "string",
                    "hidden": true,
                    "fa_icon": "fas fa-folder-open"
                }
            },
            "fa_icon": "fas fa-dna"
        },
        "amplicon_workflow_options": {
            "title": "Amplicon workflow options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options required for the analysis of amplicon data.",
            "properties": {
                "skip_reference_selection": {
                    "type": "boolean",
                    "hidden": false,
                    "description": "Skip the automatic selection of the best reference genome from the multifasta file specified by `--possible_references`.",
                    "help_text": "Skip the automatic selection of the best reference genome for each input sample from the multifasta file specified by `--possible_references`.",
                    "fa_icon": "fas fa-question-circle"
                },
                "virus_preset": {
                    "type": "string",
                    "description": "Select one of the preset virus options to use in-built FASTA of possible reference sequences.",
                    "enum": ["hcv"],
                    "fa_icon": "fas fa-viruses"
                },
                "possible_references": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "hidden": false,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to (multi)fasta file with possible reference(s). This parameter is *mandatory* if `--skip_reference_selection` is not specified and `--virus_preset` is not specified.",
                    "help_text": "Path to (multi)fasta file with possible reference(s). This parameter is *mandatory* if `--skip_reference_selection` is not specified.",
                    "fa_icon": "far fa-file-code"
                },
                "reference_selection_tool": {
                    "type": "string",
                    "default": "salmon",
                    "description": "Tool to use for best reference selection",
                    "help_text": "Tool to use for reference selection: either 'salmon' or 'kallisto'.",
                    "enum": ["salmon", "kallisto"],
                    "fa_icon": "fas fa-hammer",
                    "hidden": true
                },
                "extra_salmon_args": {
                    "type": "string",
                    "description": "Extra arguments to be passed to \"salmon quant\"",
                    "hidden": true,
                    "help_text": "Must be provided as a string within quotes.",
                    "fa_icon": "fas fa-search-plus"
                },
                "abundance_top_percentage": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 100,
                    "description": "Percentage difference in TPM from best reference to identify other close reference genomes.",
                    "default": 5,
                    "fa_icon": "fas fa-file-code",
                    "hidden": true,
                    "help_text": "Percentage difference in TPM from best reference to identify other close reference genomes."
                },
                "reference_fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "hidden": false,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA file with best reference genome for the samples. Only required if `--possible_references` not specified.",
                    "help_text": "Path to fasta file with a single reference genome to be used for all input samples. This parameter is *mandatory* if `--skip_reference_selection` is specified.",
                    "fa_icon": "far fa-file-code"
                },
                "save_mapped_bam": {
                    "type": "boolean",
                    "hidden": false,
                    "description": "Save the BAM file generated by mapping against the best reference genome.",
                    "help_text": "Save the BAM file generated by mapping against the best reference genome.",
                    "fa_icon": "fas fa-question-circle"
                },
                "skip_primer_trimming": {
                    "type": "boolean",
                    "hidden": false,
                    "description": "Skip the soft-clipping of amplicon primer sequences from the alignement.",
                    "help_text": "Skip the soft-clipping of amplicon primer sequences from the alignement against the best reference genome.",
                    "fa_icon": "fas fa-question-circle"
                },
                "clip_both_ends": {
                    "type": "boolean",
                    "description": "Clip amplicon primers from both ends of reads. Strand information from the BED file is ignored if this option is selected.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "clip_ignore_strand": {
                    "type": "boolean",
                    "description": "Ignore strand information in the BED file for primer clipping",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "clip_tolerance": {
                    "type": "integer",
                    "default": 5,
                    "description": "Tolerance of clipping in terms of number of bases extending from ends of reads",
                    "fa_icon": "fas fa-hiking",
                    "hidden": true
                },
                "hard_clip_alignment": {
                    "type": "boolean",
                    "description": "Hard clip primers from the alignment vs default soft clip",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "primer_fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "hidden": false,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA file with amplicon primer sequences.",
                    "help_text": "Path to FASTA file with amplicon primer sequences. This parameter is *mandatory* if `--skip_primer_trimming` is not specified and `--primer_bed` is not specified.",
                    "fa_icon": "far fa-file-code"
                },
                "primer_bed": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "hidden": false,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.bed(\\.gz)?$",
                    "description": "Path to BED file with coordinates of amplicon primer sequences to be clipped. Only required if `--primer_fasta` not specified.",
                    "help_text": "Path to BED file with coordinates of amplicon primer sequences to be clipped. This parameter is *mandatory* if `--skip_primer_trimming` is not specified and `--primer_fasta` is not specified.",
                    "fa_icon": "far fa-file-code"
                },
                "consensus_min_depth": {
                    "type": "integer",
                    "description": "Minimum depth for a base to be called in the consensus genome.",
                    "default": 15,
                    "fa_icon": "fas fa-file-code",
                    "hidden": true,
                    "help_text": "Minimum depth for a base to be called in the consensus genome. Values less than `--consensus_min_depth` are filled with N"
                },
                "ont_r10_sup": {
                    "type": "boolean",
                    "description": "Data are derived from the ONT platform with R10.4 chemistry and were basecalled with the \"super accurate\" basecalling model.",
                    "help_text": "Used only when calling a consensus genome using the Bayesian algorithm of `samtools consensus`",
                    "fa_icon": "fas fa-question-circle"
                }
            }
        },
        "long_read_variant_calling": {
            "title": "Options for variant calling from long reads",
            "type": "object",
            "description": "",
            "default": "",
            "fa_icon": "fas fa-bahai",
            "properties": {
                "clair3_model_path": {
                    "type": "string",
                    "description": "Path to directory containing a Clair3 model for variant calling.",
                    "default": "/opt/models/r1041_e82_400bps_sup_v410",
                    "hidden": false,
                    "help_text": "Default is set to the pre-downloaded model for ONT R10 chemistry with SUP basecalling in the Clair3 container/environment. If using a different model, give the full path to a Clair3 model directory (requiring six files in the folder, including pileup.data-00000-of-00002, pileup.data-00001-of-00002 pileup.index, full_alignment.data-00000-of-00002, full_alignment.data-00001-of-00002 and full_alignment.index) ",
                    "fa_icon": "fas fa-question-circle"
                },
                "clair3_platform": {
                    "type": "string",
                    "description": "Sequencing platform: ont, hifi, or ilmn.",
                    "default": "ont",
                    "hidden": false,
                    "fa_icon": "fas fa-question-circle"
                },
                "clair3_chunk_size": {
                    "type": "integer",
                    "description": "Chunk size for Clair3. For viruses, useful to set to the genome size.",
                    "default": 15000,
                    "hidden": true,
                    "fa_icon": "fas fa-question-circle"
                }
            }
        },
        "specialised_options_for_different_viruses": {
            "title": "Specialised options for different viruses",
            "type": "object",
            "description": "",
            "default": "",
            "fa_icon": "fas fa-bahai",
            "properties": {
                "run_hcv_glue": {
                    "type": "boolean",
                    "description": "Run the 'HCV-GLUE' analysis tool for HCV sequences. Only useful for Hepatitis C Virus (HCV). Requires manual installation of HCV-GLUE and its dependencies.",
                    "hidden": false,
                    "help_text": "Only useful for Hepatitis C Virus (HCV). Requires manual installation of HCV-GLUE and its dependencies. Please see the installation instructions at: http://hcv-glue.cvr.gla.ac.uk/#/aboutGlueProject if you want to run this module.",
                    "fa_icon": "fas fa-question-circle"
                }
            }
        },
        "host_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "filter_host_reads": {
                    "type": "boolean",
                    "hidden": false,
                    "description": "Should host reads be filtered?",
                    "help_text": "Filter sequencing reads against host genome to retain only non-host reads.",
                    "fa_icon": "fas fa-question-circle"
                },
                "host_genome": {
                    "type": "string",
                    "hidden": true,
                    "description": "Name of iGenomes reference for the host genome.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required host reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "host_fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "hidden": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is *mandatory* if `--host_genome` is not specified and `--filter_host_reads` is specified.",
                    "fa_icon": "far fa-file-code"
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": false,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "60.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": false,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://github.com/charlesfoster/h2seq/tree/dev/test-datasets",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/long_read_quality_control_options"
        },
        {
            "$ref": "#/$defs/short_read_quality_control_options"
        },
        {
            "$ref": "#/$defs/amplicon_workflow_options"
        },
        {
            "$ref": "#/$defs/long_read_variant_calling"
        },
        {
            "$ref": "#/$defs/specialised_options_for_different_viruses"
        },
        {
            "$ref": "#/$defs/host_genome_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/max_job_request_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
