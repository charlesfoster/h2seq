/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    charlesfoster/h2seq Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                        = null
    single_end                   = false
    ont_r10_sup                  = null

    // read quality control
    save_trimmed_long_reads         = false
    save_trimmed_short_reads        = false
    long_reads_min_len              = 500
    long_reads_max_len              = 2000
    short_reads_min_len             = 70
    fastp_qualified_quality         = 15
    fastp_unqualified_percent_limit = 40
    fastp_cut_mean_quality          = 15
    fastp_interleaved_in            = false
    fastp_save_merged               = false
    fastp_low_complexity_filter     = true
    fastp_complexity_threshold      = 40
    fastp_error_correction          = true
    fastp_adapter_path              = null

    // amplicon workflow
    skip_reference_selection     = false
    reference_selection_tool     = "salmon" // salmon or kallisto
    extra_salmon_args            = null
    virus_preset                 = null
    possible_references          = null
    reference_fasta              = null
    abundance_top_percentage     = 5
    save_mapped_bam              = false
    skip_primer_trimming         = false
    primer_fasta                 = null
    primer_bed                   = null
    clip_both_ends               = false
    clip_tolerance               = 5
    hard_clip_alignment          = false
    clip_ignore_strand           = false
    consensus_min_depth          = 15

    // long read variant calling
    clair3_model_path            = '/opt/models/r1041_e82_400bps_sup_v410' // hifi,hifi_revio,hifi_sequel2,ilmn,ont,ont_guppy5,r1041_e82_400bps_hac_v410,r1041_e82_400bps_hac_v500,r1041_e82_400bps_sup_v410,r1041_e82_400bps_sup_v430_bacteria_finetuned,r1041_e82_400bps_sup_v500,r941_prom_hac_g360+g422,r941_prom_sup_g5014
    clair3_platform              = 'ont' // ont,hifi,ilmn
    clair3_chunk_size            = 15000

    // hcv resistance analysis
    run_hcv_glue                 = false

    // host removal
    filter_host_reads            = false
    host_genome                  = null
    host_fasta                   = null
    genome                       = null
    igenomes_base                = 's3://ngi-igenomes/igenomes/'
    igenomes_ignore              = false

    // MultiQC options
    multiqc_config               = null
    multiqc_title                = null
    multiqc_logo                 = null
    max_multiqc_email_size       = '25.MB'
    multiqc_methods_description  = null

    // Boilerplate options
    outdir                       = 'results'
    publish_dir_mode             = 'copy'
    email                        = null
    email_on_fail                = null
    plaintext_email              = false
    monochrome_logs              = false
    hook_url                     = null
    help                         = false
    version                      = false
    pipelines_testdata_base_path = 'https://github.com/charlesfoster/h2seq/tree/dev/test-datasets'

    // Config options
    config_profile_name        = null
    config_profile_description = null
    custom_config_version                = 'master'
    custom_config_base                   = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact               = null
    config_profile_url                   = null

    // TODO: Update 10/2024: will need to remove these params out to pass the new nf-schema
    //       At the moment, I am simply ignoring them from schema validation tests elsewhere
    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '60.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

    // Other
    validate_params = true // Boolean whether to validate parameters against the schema at runtime
}

validation {
    // Schema validation default options
    failUnrecognisedParams = false
    lenientMode            = false
    schemaIgnoreParams     = 'genome,genomes,igenomes_base,monochromeLogs'
    defaultIgnoreParams    = [ 'genome', 'genomes', 'igenomes_base', 'monochromeLogs' ]
    showHiddenParams       = false
    help.enabled           = true
}

// include resource limits config
includeConfig 'resourceLimits.config'

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda', 'defaults']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry   = 'quay.io'
docker.registry      = 'quay.io'
podman.registry      = 'quay.io'
singularity.registry = 'quay.io'

// Nextflow plugins
plugins {
    id 'nf-schema@2.0.0' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

// Load igenomes.config if required
if (!params.igenomes_ignore) {
    includeConfig 'conf/igenomes.config'
} else {
    params.genomes = [:]
}
// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'charlesfoster/h2seq'
    author          = """Charles Foster"""
    homePage        = 'https://github.com/charlesfoster/h2seq'
    description     = """This pipeline analyses HCV and HIV sequencing data from the H2Seq study"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=23.04.0'
    version         = '1.0dev'
    doi             = ''
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
