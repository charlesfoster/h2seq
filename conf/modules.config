/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC {
        ext.args = '--quiet'
        publishDir = [
            path: {
                if (meta.long_reads) {
                    "${params.outdir}/${meta.id}/long_reads/qc_metrics"
                } else {
                    "${params.outdir}/${meta.id}/short_reads/qc_metrics"
                }
            },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'NANOQ' {
        ext.args = [
            "--header",
            "--min-len ${params.long_reads_min_len}",
            "--max-len ${params.long_reads_max_len}",
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/${meta.id}/long_reads/clean_reads" },
                mode: params.publish_dir_mode,
                pattern: "*.{stats}",
                enabled: true,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ],
            [
                path: { "${params.outdir}/${meta.id}/long_reads/clean_reads" },
                mode: params.publish_dir_mode,
                pattern: "*.{fastq,fq,fastq.gz,fq.gz}",
                enabled: params.save_trimmed_long_reads,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
    }

    withName: FASTP {
        ext.args = [
            "-q ${params.fastp_qualified_quality}",
            "-u ${params.fastp_unqualified_percent_limit}",
            "--cut_front",
            "--cut_tail",
            "--cut_mean_quality ${params.fastp_cut_mean_quality}",
            "--length_required ${params.short_reads_min_len}",
            params.fastp_low_complexity_filter ? "--low_complexity_filter --complexity_threshold ${params.fastp_complexity_threshold}" : "",
            params.fastp_error_correction ? "--correction" : "",
            params.fastp_interleaved_in ? "--interleaved_in" : "",
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/${meta.id}/short_reads/clean_reads" },
                mode: params.publish_dir_mode,
                pattern: "*.{html,json}"
            ],
            [
                path: { "${params.outdir}/${meta.id}/short_reads/clean_reads" },
                mode: params.publish_dir_mode,
                pattern: "*.fastq.gz",
                enabled: params.save_trimmed_short_reads
            ]
        ]
        tag = { "${meta.id}" }
    }

    withName: 'SELECT_BEST_REFERENCE' {
        ext.args = [
            params.abundance_top_percentage ? "--top ${params.abundance_top_percentage}" : '--top 5',
            params.reference_selection_tool == "salmon" ? "--salmon" : '',
        ].join(' ').trim()
        publishDir = [
            path: {
                if (meta.long_reads) {
                    "${params.outdir}/${meta.id}/long_reads/reference_selection"
                } else {
                    "${params.outdir}/${meta.id}/short_reads/reference_selection"
                }
            },
            mode: params.publish_dir_mode,
            pattern: "*.{tsv}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SEQKIT_GREP' {
        ext.args   = { '' }
        publishDir = [
            path: {
                if (meta.long_reads) {
                    "${params.outdir}/${meta2.id}/long_reads/reference_selection"
                } else {
                    "${params.outdir}/${meta2.id}/short_reads/reference_selection"
                }
            },
            mode: params.publish_dir_mode,
            pattern: "*.{fasta,fa}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CALCULATE_READ_STATS' {
        ext.args   = { '' }
        publishDir = [
            path: {
                if (meta.long_reads) {
                    "${params.outdir}/${meta.id}/long_reads/qc_metrics"
                } else {
                    "${params.outdir}/${meta.id}/short_reads/qc_metrics"
                }
            },
            mode: params.publish_dir_mode,
            enabled: true,
            pattern: "*.{txt}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'KALLISTO_INDEX' {
        ext.args   = { '' }
        publishDir = [
            path: {
                if (meta.long_reads) {
                    "${params.outdir}/${meta.id}/long_reads/reference_selection"
                } else {
                    "${params.outdir}/${meta.id}/short_reads/reference_selection"
                }
            },
            mode: params.publish_dir_mode,
            enabled: false,
            pattern: "*",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'KALLISTO_QUANT' {
        ext.args   = { '' }
        publishDir = [
            path: {
                if (meta.long_reads) {
                    "${params.outdir}/${meta.id}/long_reads/reference_selection"
                } else {
                    "${params.outdir}/${meta.id}/short_reads/reference_selection"
                }
            },
            mode: params.publish_dir_mode,
            enabled: true,
            pattern: "*.{tsv,log,json}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SALMON_INDEX' {
        ext.args   = { '' }
        publishDir = [
            path: {
                if (meta.long_reads) {
                    "${params.outdir}/${meta.id}/long_reads/reference_selection"
                } else {
                    "${params.outdir}/${meta.id}/short_reads/reference_selection"
                }
            },
            mode: params.publish_dir_mode,
            enabled: false,
            pattern: "*",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SALMON_QUANT' {
        ext.args = {
            def args = []
            if (meta.long_reads) {
                args << "--ont"
            }
            if (params.extra_salmon_args) {
                args << params.extra_salmon_args
            }
            args << "--minAssignedFrags 1"
            args.join(' ')
        }
        publishDir = [
            path: {
                if (meta.long_reads) {
                    "${params.outdir}/${meta.id}/long_reads/reference_selection"
                } else {
                    "${params.outdir}/${meta.id}/short_reads/reference_selection"
                }
            },
            mode: params.publish_dir_mode,
            enabled: true,
            pattern: "*.{tsv,log,json}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'BWA_INDEX' {
        ext.args   = { '' }
        publishDir = [
            path: {
                if (meta.long_reads) {
                    "${params.outdir}/${meta.id}/long_reads/primer_clipping"
                } else {
                    "${params.outdir}/${meta.id}/short_reads/primer_clipping"
                }
            },
            mode: params.publish_dir_mode,
            pattern: "*.{bam}",
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'BWA_MEM' {
        ext.args   = { '-k 5 -T 16' }
        ext.args2   = { '--write-index' }
        publishDir = [
            path: {
                if (meta.long_reads) {
                    "${params.outdir}/${meta.id}/long_reads/primer_clipping"
                } else {
                    "${params.outdir}/${meta.id}/short_reads/primer_clipping"
                }
            },
            mode: params.publish_dir_mode,
            pattern: "*.{bam}",
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'BEDTOOLS_BAMTOBED' {
        publishDir = [
            path: {
                if (meta.long_reads) {
                    "${params.outdir}/${meta.id}/long_reads/primer_clipping"
                } else {
                    "${params.outdir}/${meta.id}/short_reads/primer_clipping"
                }
            },
            mode: params.publish_dir_mode,
            pattern: "*.{bed}",
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SAMTOOLS_CONSENSUS' {
        ext.args = [
            "-a",
            "--ambig",
            "--show-ins yes",
            "--show-del yes",
            "--min-depth ${params.consensus_min_depth}",
            params.ont_r10_sup ? "--config r10.4_sup" : "",
        ].join(' ').trim()
        ext.args2 = [
            "-a",
            "--show-ins yes",
            "--show-del yes",
            "--min-depth ${params.consensus_min_depth}",
            "--mode simple",
            "--call-fract 0.51",
            "--het-fract 0.49",
        ].join(' ').trim()
        publishDir = [
            [
                path: {
                    if (meta.long_reads) {
                        "${params.outdir}/${meta.id}/long_reads/consensus"
                    } else {
                        "${params.outdir}/${meta.id}/short_reads/consensus"
                    }
                },
                mode: params.publish_dir_mode,
                pattern: "*.{fa}",
                enabled: false,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ],
            [
                path: {
                    if (meta.long_reads) {
                        "${params.outdir}/${meta.id}/long_reads/consensus"
                    } else {
                        "${params.outdir}/${meta.id}/short_reads/consensus"
                    }
                },
                mode: params.publish_dir_mode,
                enabled: params.save_mapped_bam,
                pattern: "*.{bam,csi}",
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
    }

    withName: 'SPLIT_CONSENSUS_GENOMES' {
        ext.args = [
            "",
        ].join(' ').trim()
        publishDir = [
            [
                path: {
                    if (meta.long_reads) {
                        "${params.outdir}/${meta.id}/long_reads/consensus"
                    } else {
                        "${params.outdir}/${meta.id}/short_reads/consensus"
                    }
                },
                mode: params.publish_dir_mode,
                pattern: "*.{fa}",
                enabled: true,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ],
        ]
    }


    withName: 'SAMTOOLS_AMPLICONCLIP' {
        ext.args = [
            params.clip_both_ends ? '--both-ends' : '',
            params.clip_tolerance ? "--tolerance ${params.clip_tolerance}" : "--tolerance 5",
            params.hard_clip_alignment ? '--hard-clip' : '',
            params.clip_ignore_strand ? '' : '--strand',
        ].join(' ').trim()
        publishDir = [
            path: {
                if (meta.long_reads) {
                    "${params.outdir}/${meta.id}/long_reads/primer_clipping"
                } else {
                    "${params.outdir}/${meta.id}/short_reads/primer_clipping"
                }
            },
                mode: params.publish_dir_mode,
                pattern: "*.{bed}",
                enabled: true,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MINIMAP2_ALIGN' {
        ext.args   = { meta.long_reads ? "-x map-ont" : "-x sr"  }
        publishDir = [
            path: {
                if (meta.long_reads) {
                    "${params.outdir}/${meta.id}/long_reads/read_mapping"
                } else {
                    "${params.outdir}/${meta.id}/short_reads/read_mapping"
                }
            },
            mode: params.publish_dir_mode,
            pattern: "*.{bam,bai}",
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SAMTOOLS_SORT' {
        ext.args   = { '--write-index' }
        publishDir = [
            path: {
                if (meta.long_reads) {
                    "${params.outdir}/${meta.id}/long_reads/consensus"
                } else {
                    "${params.outdir}/${meta.id}/short_reads/consensus"
                }
            },
            mode: params.publish_dir_mode,
            pattern: "*.{bam,csi}",
            enabled: false ,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CLAIR3' {
        ext.args = [
            "--model_path=${params.clair3_model_path}",
            "--platform=${params.clair3_platform}",
            "--chunk_size=${params.clair3_chunk_size}",
            "--include_all_ctgs",
            "--no_phasing_for_fa",
            "--remove_intermediate_dir",
            "--enable_long_indel",
            "--haploid_sensitive",
            "--keep_iupac_bases",
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/${meta.id}/long_reads/variant_calling" },
            mode: params.publish_dir_mode,
            pattern: "*.{vcf,vcf.gz}",
            enabled: true ,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


    withName: 'REMOVE_EMPTY_SEQUENCES' {
        ext.args   = { '' }
        publishDir = [
            path: {
                if (meta.long_reads) {
                    "${params.outdir}/${meta.id}/long_reads/reporting"
                } else {
                    "${params.outdir}/${meta.id}/short_reads/reporting"
                }
            },
            mode: params.publish_dir_mode,
            pattern: "*.{fasta}",
            enabled: false ,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'HCV_GLUE' {
        ext.args   = { '' }
        publishDir = [
            path: {
                if (meta.long_reads) {
                    "${params.outdir}/${meta.id}/long_reads/reporting"
                } else {
                    "${params.outdir}/${meta.id}/short_reads/reporting"
                }
            },
            mode: params.publish_dir_mode,
            pattern: "*.{html}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
